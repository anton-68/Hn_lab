LogTo("c2power4.log");
sdp:=[];
c2:=CyclicGroup(2);
c2_list:=List(c2);
c2_2:=DirectProduct(c2,c2);
c2_2_list:=List(c2_2);
c2_2_2:=DirectProduct(c2_2,c2);
c2_2_2_list:=List(c2_2_2);
d8:=DihedralGroup(8);
d8_list:=List(d8);
aut_d8:=AutomorphismGroup(d8);
aut_d8_list:=List(aut_d8);
aut_c2_2:=AutomorphismGroup(c2_2);
aut_c2_2_list:=List(aut_c2_2);
aut_c2_2_2:=AutomorphismGroup(c2_2_2);
aut_c2_2_2_list:=List(aut_c2_2_2);


for ae in [1..Size(aut_c2_2_2)] do
	flag:=true;
#	Print("\nAutomorphism No.:",ae);
#	Print("\nAutomorphism:\n",aut_c2_2_2_list[ae]);
	alpha:=GroupHomomorphismByImages(c2,aut_c2_2_2,
		[c2_list[2]],[aut_c2_2_2_list[ae]]);
	if alpha <> fail then
#		Print("\nalpha:\n",alpha);
		c2_2_2z2:=SemidirectProduct(c2,alpha,c2_2_2);
#		Print("\nPretender:\n",c2_2_2z2);
		for i in [1..Size(sdp)] do
			if IsomorphismGroups(sdp[i],c2_2_2z2) <> fail then 
				flag:=false;
				break;
			fi;
		od;
		if flag then
			Add(sdp,c2_2_2z2);
#			Print("\nAdded group:\n",c2_2_2z2);
		fi;
	fi;
od;

# Print("\nSize of aut_d8:",Size(aut_d8));
for ae in [1..Size(aut_d8)] do
	flag:=true;
#	Print("\nAutomorphism No.:",ae);
#	Print("\nAutomorphism:\n",aut_d8_list[ae]);
	alpha:=GroupHomomorphismByImages(c2,aut_d8,
		[c2_list[2]],[aut_d8_list[ae]]);
	if alpha <> fail then
#		Print("\nalpha:\n",alpha);
		c2zd8:=SemidirectProduct(c2,alpha,d8);
#		Print("\nPretender:\n",c2zd8);
		for i in [1..Size(sdp)] do
			if IsomorphismGroups(sdp[i],c2zd8) <> fail then 
				flag:=false;
				break;
			fi;
		od;
		if flag then
			Add(sdp,c2zd8);
#			Print("\nAdded group:\n",c2zd8);
		fi;
	fi;
od;

# Print("\nSize of aut_c2_2:",Size(aut_c2_2));
for ae in [1..Size(aut_c2_2)] do
for be in [1..Size(aut_c2_2)] do
	flag:=true;
#	Print("\nAutomorphism A, No.:",ae);
#	Print("\nAutomorphism A:\n",aut_c2_2_list[ae]);
#	Print("\nAutomorphism B, No.:",be);
#	Print("\nAutomorphism B:\n",aut_c2_2_list[be]);
	alpha:=GroupHomomorphismByImages(c2_2,aut_c2_2,
		[c2_2_list[2],c2_2_list[3]],
		[aut_c2_2_list[ae],aut_c2_2_list[be]]);
	if alpha <> fail then
#		Print("\nalpha:\n",alpha);
		c2_2z2_2:=SemidirectProduct(c2_2,alpha,c2_2);
#		Print("\nPretender:\n",c2_2z2_2);
		for i in [1..Size(sdp)] do
			if IsomorphismGroups(sdp[i],c2_2z2_2) <> fail then 
				flag:=false;
				break;
			fi;
		od;
		if flag then
			Add(sdp,c2_2z2_2);
#			Print("\nAdded group:\n",c2_2z2_2);
		fi;
	fi;
od;od;

Print("\n\nFinded groups:");
Print("\n\n");
for i in [1..Size(sdp)] do
	Print("\nGroup ",i);
	Print("\n",List(sdp[i]));
	IFP:=Image(IsomorphismFpGroup(sdp[i]));
	Rels:=RelatorsOfFpGroup(IFP);
	Print("\n\nIsomorphic FP-Group:");
	Print("\n", List(IFP));
	Print("\n\nRelators:");
	Print("\n",Rels);
	Print("\n\n");
od;	
Print("\n");
LogTo();